{"version":3,"file":"app~37f2faf7.bundle.js","mappings":";+IAKc,IAAIA,MAAOC,iQCJzB,gnGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EDGS,gCCHMC,EDIH,ECJqBC,EDKpB,cCHfC,GAAYC,EAAAA,EAAAA,IAAOJ,EAAeC,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA6BF,QA1B8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAKOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAN5B,EAOxB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EACMY,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAKtBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAP5B,EAQhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,mCC7BF,QALe,CACbS,SAAU,uCACVC,iBAAkB,SCOpB,EAPqB,CACnBC,YAAa,GAAF,OAAKC,EAAAA,SAAe,qCAA6BA,EAAAA,IAAU,qBAAaA,EAAAA,iBAAuB,WAC1GC,SAAU,GAAF,OAAKD,EAAAA,SAAe,kCAA0BA,EAAAA,IAAU,qBAAaA,EAAAA,iBAAuB,WACpGE,gBAAiB,GAAF,OAAKF,EAAAA,SAAe,QACnCG,kBAAmB,SAACf,GAAE,gBAAQY,EAAAA,SAAe,kBAAUZ,EAAE,sPCL3D,irOAcA,QAbwB,yBADxB,4FACwB,SADxB,QAMG,EALqB,EAUrB,OAXH,EACwB,OADxB,EACwB,4CACtB,sGACyBgB,MAAMC,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,GAAY,2CACpB,0FAED,WAA8BpB,GAAE,uFACPgB,MAAMC,EAAAA,kBAA+BjB,IAAI,OAAlD,OAARkB,EAAW,EAAH,uBACPA,EAASC,QAAM,2CACvB,+CAXH,6DAWG,EAVqB,sDCMlBE,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,eAAe,aAChCC,OAAQF,SAASC,eAAe,UAChCE,QAASH,SAASC,eAAe,kBAGnCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/globals/config.js","webpack://restaurant-apps/./src/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurantdb-source.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["const CONFIG = {\r\n  KEY: 'YOUR_API_KEY',\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://image.tmdb.org/t/p/w500/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n};\r\n\r\nexport default CONFIG;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  NOW_PLAYING: `${CONFIG.BASE_URL}movie/now_playing?api_key=${CONFIG.KEY}&language=${CONFIG.DEFAULT_LANGUAGE}&page=1`,\r\n  UPCOMING: `${CONFIG.BASE_URL}movie/upcoming?api_key=${CONFIG.KEY}&language=${CONFIG.DEFAULT_LANGUAGE}&page=1`,\r\n  LIST_RESTAURANT: `${CONFIG.BASE_URL}list`,\r\n  DETAIL_RESTAURANT: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../../globals/api-endpoint';\r\n\r\nclass RestaurantDbSource {\r\n  static async listRestaurant() {\r\n    const response = await fetch(API_ENDPOINT.LIST_RESTAURANT);\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL_RESTAURANT(id));\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport default RestaurantDbSource;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.scss';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\n// import a plugin\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.getElementById('hamburger'),\n  drawer: document.getElementById('drawer'),\n  content: document.getElementById('mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["Date","toISOString","i","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","BASE_URL","DEFAULT_LANGUAGE","NOW_PLAYING","CONFIG","UPCOMING","LIST_RESTAURANT","DETAIL_RESTAURANT","fetch","API_ENDPOINT","response","json","responseJson","app","App","button","document","getElementById","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}